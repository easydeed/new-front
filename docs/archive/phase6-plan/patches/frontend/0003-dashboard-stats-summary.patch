*** Begin Patch
*** Update File: frontend/src/app/dashboard/page.tsx
@@
-<div className="stat-number">12</div>
-<div className="stat-label">Total Deeds</div>
+<div className="stat-number">{summary?.total ?? '—'}</div>
+<div className="stat-label">Total Deeds</div>
@@
-<div className="stat-number">3</div>
-<div className="stat-label">In Progress</div>
+<div className="stat-number">{summary?.in_progress ?? '—'}</div>
+<div className="stat-label">In Progress</div>
@@
-// existing top-level component code (no data fetch)
+const [summary, setSummary] = useState<{total:number; completed:number; in_progress:number; month:number} | null>(null);
+const [loading, setLoading] = useState(true);
+useEffect(() => {
+  const api = process.env.NEXT_PUBLIC_API_URL || '/api';
+  const token = (typeof window !== 'undefined') ? localStorage.getItem('token') : null;
+  (async () => {
+    try {
+      setLoading(true);
+      const res = await fetch(`${api}/deeds/summary`, { headers: token ? { Authorization: `Bearer ${token}` } : {} });
+      if (res.ok) {
+        setSummary(await res.json());
+      } else {
+        const list = await fetch(`${api}/deeds`, { headers: token ? { Authorization: `Bearer ${token}` } : {} });
+        if (list.ok) {
+          const deeds = await list.json();
+          const total = deeds.length;
+          const completed = deeds.filter((d:any) => d.status === 'completed').length;
+          const in_progress = deeds.filter((d:any) => d.status !== 'completed').length;
+          setSummary({ total, completed, in_progress, month: completed });
+        }
+      }
+    } finally {
+      setLoading(false);
+    }
+  })();
+}, []);
*** End Patch
