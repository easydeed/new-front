#!/usr/bin/env python3\n\"\"\"\nTest script for TitlePoint integration\nThis validates the complete flow from address to TitlePoint data\n\"\"\"\nimport os\nimport sys\nimport asyncio\nimport json\nfrom dotenv import load_dotenv\n\n# Load environment variables\nload_dotenv()\n\n# Add the current directory to Python path to import our services\nsys.path.append(os.path.dirname(os.path.abspath(__file__)))\n\nfrom services.titlepoint_service import TitlePointService\n\nasync def test_titlepoint_integration():\n    \"\"\"\n    Test the complete TitlePoint integration workflow\n    \"\"\"\n    print(\"üß™ Testing TitlePoint Integration...\")\n    print(\"=\" * 50)\n    \n    # Initialize TitlePoint service\n    try:\n        tp_service = TitlePointService()\n        print(\"‚úÖ TitlePoint service initialized successfully\")\n    except Exception as e:\n        print(f\"‚ùå Failed to initialize TitlePoint service: {e}\")\n        return False\n    \n    # Test data - sample property address\n    test_data = {\n        'fullAddress': '123 Main Street, Los Angeles, CA 90210',\n        'street': '123 Main Street',\n        'city': 'Los Angeles',\n        'state': 'CA',\n        'county': 'Los Angeles',\n        'zip': '90210'\n    }\n    \n    print(f\"üè† Testing with address: {test_data['fullAddress']}\")\n    print(\"-\" * 30)\n    \n    try:\n        # Call TitlePoint enrichment\n        result = await tp_service.enrich_property(test_data)\n        \n        print(\"üìã TitlePoint Response:\")\n        print(json.dumps(result, indent=2))\n        \n        # Validate expected fields\n        expected_fields = ['success', 'fullAddress', 'state', 'county', 'city']\n        missing_fields = [field for field in expected_fields if field not in result]\n        \n        if missing_fields:\n            print(f\"‚ö†Ô∏è  Missing expected fields: {missing_fields}\")\n        else:\n            print(\"‚úÖ All expected fields present\")\n            \n        # Check for TitlePoint-specific data\n        titlepoint_fields = ['apn', 'brief_legal', 'current_owner_primary']\n        found_fields = [field for field in titlepoint_fields if result.get(field)]\n        \n        if found_fields:\n            print(f\"üéØ TitlePoint data found: {found_fields}\")\n        else:\n            print(\"‚ÑπÔ∏è  No TitlePoint data returned (this may be expected for test addresses)\")\n            \n        return True\n        \n    except Exception as e:\n        print(f\"‚ùå TitlePoint integration test failed: {e}\")\n        return False\n\ndef test_environment_variables():\n    \"\"\"\n    Test that all required environment variables are set\n    \"\"\"\n    print(\"üîß Testing Environment Variables...\")\n    print(\"=\" * 50)\n    \n    required_vars = {\n        'TITLEPOINT_USER_ID': 'TitlePoint User ID',\n        'TITLEPOINT_PASSWORD': 'TitlePoint Password'\n    }\n    \n    optional_vars = {\n        'DATABASE_URL': 'Database URL (for caching)',\n        'GOOGLE_API_KEY': 'Google Places API Key',\n        'OPENAI_API_KEY': 'OpenAI API Key'\n    }\n    \n    all_good = True\n    \n    # Check required variables\n    for var, description in required_vars.items():\n        if os.getenv(var):\n            print(f\"‚úÖ {var} ({description}): Set\")\n        else:\n            print(f\"‚ùå {var} ({description}): Missing\")\n            all_good = False\n    \n    # Check optional variables\n    for var, description in optional_vars.items():\n        if os.getenv(var):\n            print(f\"‚úÖ {var} ({description}): Set\")\n        else:\n            print(f\"‚ö†Ô∏è  {var} ({description}): Not set (optional)\")\n    \n    return all_good\n\nasync def main():\n    \"\"\"\n    Run all integration tests\n    \"\"\"\n    print(\"üöÄ DeedPro TitlePoint Integration Test Suite\")\n    print(\"=\" * 60)\n    print()\n    \n    # Test environment\n    env_ok = test_environment_variables()\n    print()\n    \n    if not env_ok:\n        print(\"‚ùå Environment variables not properly configured\")\n        print(\"Please check your .env file and Render environment variables\")\n        return\n    \n    # Test TitlePoint integration\n    integration_ok = await test_titlepoint_integration()\n    print()\n    \n    # Summary\n    print(\"üìä Test Summary\")\n    print(\"=\" * 30)\n    print(f\"Environment Setup: {'‚úÖ PASS' if env_ok else '‚ùå FAIL'}\")\n    print(f\"TitlePoint Integration: {'‚úÖ PASS' if integration_ok else '‚ùå FAIL'}\")\n    \n    if env_ok and integration_ok:\n        print(\"\\nüéâ All tests passed! TitlePoint integration is ready for production.\")\n    else:\n        print(\"\\n‚ö†Ô∏è  Some tests failed. Please review the errors above.\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n"
