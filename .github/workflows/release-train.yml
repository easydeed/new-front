name: Release Train

on:
  schedule:
    - cron: '0 23 * * 1-5'   # 16:00 PT staging
    - cron: '0 1 * * 2-6'    # 18:00 PT prod (01:00 UTC next day)
  workflow_dispatch:

env:
  RELEASE_TRAIN_ENABLED: true

jobs:
  staging:
    if: ${{ env.RELEASE_TRAIN_ENABLED == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install & Build Frontend
        run: |
          cd frontend || exit 0
          npm ci
          npm run build

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Backend
        run: |
          cd backend || exit 0
          python -m pip install -r requirements.txt

      - name: Deploy Frontend to Vercel (staging)
        if: success()
        run: |
          if [ -d "frontend" ]; then
            npm i -g vercel@latest
            vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} --prod=false --scope ${{ secrets.VERCEL_ORG_ID }} --confirm || true
          fi

      - name: Deploy Backend (staging)
        if: success()
        run: |
          if [ -n "${{ secrets.API_DEPLOY_CMD }}" ]; then
            bash -lc "${{ secrets.API_DEPLOY_CMD }} staging"
          fi

      - name: Playwright Smoke (staging)
        if: success()
        run: |
          npm i -g playwright
          npx playwright install --with-deps chromium
          node e2e/run_smoke.js "${{ secrets.FRONTEND_BASE_URL_STAGING }}" "${{ secrets.API_BASE_URL_STAGING }}"

  production:
    if: ${{ env.RELEASE_TRAIN_ENABLED == 'true' }}
    needs: [ staging ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Gate on last staging run
        run: echo "Proceeding to prod if staging passed."

      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install & Build Frontend
        run: |
          cd frontend || exit 0
          npm ci
          npm run build

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Backend
        run: |
          cd backend || exit 0
          python -m pip install -r requirements.txt

      - name: Deploy Frontend to Vercel (prod)
        if: success()
        run: |
          if [ -d "frontend" ]; then
            npm i -g vercel@latest
            vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} --prod --scope ${{ secrets.VERCEL_ORG_ID }} --confirm || true
          fi

      - name: Deploy Backend (prod)
        if: success()
        run: |
          if [ -n "${{ secrets.API_DEPLOY_CMD }}" ]; then
            bash -lc "${{ secrets.API_DEPLOY_CMD }} prod"
          fi

      - name: Playwright Smoke (prod)
        if: success()
        run: |
          npm i -g playwright
          npx playwright install --with-deps chromium
          node e2e/run_smoke.js "${{ secrets.FRONTEND_BASE_URL_PROD }}" "${{ secrets.API_BASE_URL_PROD }}"
